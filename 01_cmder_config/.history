ll
dir
dir
clear
ll
pip3 install flake8
cmd
cmd
start
pip3 install flake8
cmd
start
cd `
cd ~
cd
cd \
cd Users\
ll
dir
cmd
cd Users\
dir
ll
cmd
set
cmd
cd ~
cd Users\
ll
dir
cmd
ll
cmd
python
cd
cd %ProgramData%
cd \
cd Users\
cd minhwasoo\
ddir
dir
cd ..
where python
cd
cd\
cd Users\
cd minhwasoo\
cd Downloads\
dir
git status
bash
setx /M MP_FORCE_USE_SANDBOX 1
cd minhwasoo\
ddir
dir
cd ..
where python
cd
cd\
cd Users\
cd minhwasoo\
cd Downloads\
git status
setx /M MP_FORCE_USE_SANDBOX 1
node
cd \
celar
cd d:
d:
cd Coding\
cd JS_OOP\
node hello.js 
git
clear
ll
dir
bash
bash
clear
ll
cmd
cd
cd\
ll
git-bash
git
gitbash
cmd
cmd
cd %ProgramData%
cd \
cd Users\
cd minhwasoo\
ddir
dir
cd ..
where python
cd
cd\
cd Users\
cd minhwasoo\
cd Downloads\
dir
git status
bash
setx /M MP_FORCE_USE_SANDBOX 1
cd minhwasoo\
ddir
dir
where python
cd
cd\
cd Users\
cd minhwasoo\
cd Downloads\
git status
setx /M MP_FORCE_USE_SANDBOX 1
node
celar
cd d:
d:
cd Coding\
cd JS_OOP\
node hello.js 
git
clear
ll
bash
ll
cmd
cd\
git-bash
git
gitbash
cmd
cd
cd..
where
vim
vim --version
ls
cd cmd
cd ..
cd mingw64\
"dir
dir v*
dir v*.exe
sh
pwd
cd \
where vim
cd vim
cd "Program Files
cd Git\
cd usr
cd bin
ver
cmd
bash
clear
ll
dir
exit
ll
bash
ll
cmd
cd\
git-bash
git
gitbash
cmd
cd
where
vim --version
ls
cd cmd
cd mingw64\
"dir
dir v*
dir v*.exe
sh
pwd
where vim
cd vim
cd "Program Files
cd Git\
cd usr
cd bin
cmd
exit
cd \
clear
ver
bash
python
curl --versioin
gvim
cd %userprofile%
lll
git clone http://github.com/gmarik/vundle.git .vim/bundle/vundle.vim
ll
cd .vim
cd bn
cd bundle\
cd vundle.vim\
dir
cd ..
cd..
vim
sublime
code _vimrc 
curl
curl --version
curl --versioin
gvim
lll
cd .vim
cd bn
cd bundle\
cd vundle.vim\
cd..
curl
curl --version
cmd
cd
cd %userprofile%
git clone
git clone http://github.com/gmarik/vundle.git .vim/bundle/vundle.vim
edit
edp
edpp
editpp
sublime
code _vimrc 
vimrc
vim
curl -fLo ~/.vim/autoload/plug.vim --create-dirs \     https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
clear
ll
cd .vim\
cd ..
bash
cd "Program Files
cd Git\
cd bin
"
dir
cd \
git-bash
cmd
cd
cd %userprofile%
git clone
git clone http://github.com/gmarik/vundle.git .vim/bundle/vundle.vim
edit
edp
edpp
editpp
sublime
code _vimrc 
vimrc
vim
curl -fLo ~/.vim/autoload/plug.vim --create-dirs \     https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
cd .vim\
cd ..
git-bash
bahs
git
clear
path
cd bin\
sh
cd "Program Files
cd Git\
cd bin
"
dir
bash
ll
cd \
cd \
gvim
"
bash
ll
cd \
gvim
sh
cd \
ls
dir
exit
git
path
cd bin\
sh
cd "Program Files
cd Git\
cd bin
"
dir
bash
ll
cd \
cd \
gvim
"
bash
cd \
sh
cd \
exit
e
gl
vi
dr
gvim
 git clone https://github.com/saaguero/dotvim
ls
e.
mklink %homepath%\.vimrc C:\Program Files\totalcmd\RunAsTool\cmder\dotvim\.vimrc
%homepath%
cd C:\Program Files
C:\Program Files
mklink %homepath%\.vimrc "C:\Program Files\totalcmd\RunAsTool\cmder\dotvim\.vimrc"
vim
clear
dir
ll
pwd
cd \
sh
cd \
exit
e
gl
vi
dr
 git clone https://github.com/saaguero/dotvim
ls
e.
mklink %homepath%\.vimrc C:\Program Files\totalcmd\RunAsTool\cmder\dotvim\.vimrc
%homepath%
cd C:\Program Files
C:\Program Files
mklink %homepath%\.vimrc "C:\Program Files\totalcmd\RunAsTool\cmder\dotvim\.vimrc"
pwd
clea
r
cls
cd
cd ~
cd %homeoath%
cd %homepath%
dir
GVIM
vim
clear
ll
gvim
vim
ll
python
dir
clear
gvim
echo has('python3')
vim --version
python3
python
vim --version
cd $HOME
cd $home
cd %home
cd %home%
vim --version
vim --version
cmder
cd $HOME
cd $home
cd %home
cd %home%
vim --version
cmder
path
gvim --version
gvim
clea
r
cls
vim --version
vim
clear
ll
dir
where vim
vim --version
where vim
where vim
where vim
vm
vim
vim --verison
%pythonpath%
vim --version
vim --version
where vim
where vim
vm
%pythonpath%
gvim --version
where vim
vi
vi --version
where gvim
where code
path
%PYTHONPATH%
echo $PYTHONPATH
echo %PYTHONPATH%
vim --verison
cls
cd \
vim
vim --version
vim
vim --version
exit
python
path
python
vim --verison
vim
vim --version
vim
exit
python
path
cd \
ls
cles
python
vim --version
gvim --version
gvim
cls
clear
ll
dir
cd \
vim --version
python
cd \
python3
python
vim --version
gvim --version
cd \
dir
python
path
vim --version
vim
cls
cd \
dir
echo %PYTHONPATH%
echo %PYTHONHOME%
vim --version
vim --version
gvim --version
cd \
dir
python
path
vim --version
cls
cd \
echo %PYTHONPATH%
echo %PYTHONHOME%
cd %USER%
cd %userprofile%
dir
vim .vimrc
kk
ll
gvim
vim --version
vim
ll
vim --version
gvim
vim
vim --version
vim
vim
gvim
cd \
ll
dir
gvim --version
vim --version
vim --version
gvim
GVIM
GVIM
vim --version
gvim
gvim
gvim
gvim
python
vim --version
gvim
gvim
gvim
clear
gvim
ll
python
gvim
set
clear
ll
dir
cd \
python
python3
python
clear
exit
ll
python
set
clear
python
python3
exit
python
cd \
vim
clear
ls 
cd Intel\
ll
cd ..
ls
cls
dir
gvim
bash
sh
l
ll
gvim
l
ll
clear
mklink %homepath%\.vimrc "C:\Program Files\totalcmd\RunAsTool\cmder\dotvim\.vimrc"
gvm
gvim
ll
clear
mklink %homepath%\.vimrc "C:\Program Files\totalcmd\RunAsTool\cmder\dotvim\.vimrc"
gvm
vim
cls
dir
cd \
gvim
cls
dir
cd \
gvim
gvim
gvim
gvim
clear
ll
cd c:\Windows\
dir
cd SysWOW64\
regsvr32
regsvr32 mscomoct2.ocx
regsvr32 mscomct2.ocx
mklink %homepath%\.vimrc "C:\Program Files\totalcmd\RunAsTool\cmder\dotvim\.vimrc"
gvm
gvim
ll
clear
mklink %homepath%\.vimrc "C:\Program Files\totalcmd\RunAsTool\cmder\dotvim\.vimrc"
gvm
vim
cls
dir
cd \
gvim
cls
dir
cd \
gvim
gvim
gvim
gvim
clear
ll
cd c:\Windows\
cd SysWOW64\
regsvr32
regsvr32 mscomoct2.ocx
regsvr32 mscomct2.ocx
cd
cd\
pip install pyautogui
python -m pip install --upgrade pip
pip install win32api
pip install pypiwin32
pip install pyhook
pip install pyHook-1.4.1-cp37-cp37m-win amd64.whl
pip install whatever.whl
cd Download
cd Users\
cd minhwasoo\
pip install pyHook-1.5.1-cp37-cp37m-win32.whl 
pip install "pyHook-1.5.1-cp37-cp37m-win_amd64.whl" 
python auto.py -r
cd Downloads\
pip install pyHook-1.5.1-cp37-cp37m-win_amd64.whl 
cd ..
cd Documents\
cd Python\
dir
python test.py
python test.py 
cd ..
cd Documents\
cd Python\
python test.py
python test.py 
ll
cd\
dir
conda update conda
clear
conda info --envs
conda create --name helloworld
conoda activate helloworld
conda
conda activate
conda init cmd.exe
conda activate helloworld
cmd
cmd
powershell
cmd
cmd
cmd
cmd
cmd
exit
cd \
git
clear
clea
cleear
lll
mingw
git-bash
git bash
exit
clea
cleear
lll
mingw
git bash
exit
cd \
mintty
mingw64 /c
cd "Program Files
cd git
git-cmd
l
cd bin
cd ..
bash
cd git-bash
dir
git-bash
git-bash
cmd
exit
git-bash
exit
yarn -v
cmd
cd config\
coode user_profile.cmd 
code user_profile.cmd 
dir
code .
code user_profile.cmd 
cd config
dir
code .
cmd
exit
git-bash
exit
yarn -v
cmd
coode user_profile.cmd 
code user_profile.cmd 
dir
code .
code user_profile.cmd 
cd config
cd config\
code .
set "VI=C:\Program Files (x86)\Vim\vim81\gvim.exe"
dir
vim
path
set VI="C:\Program Files (x86)\Vim\vim81\gvim.exe"
%VI%
viv
vi
sett
sett
cmder
cd config
dir
code .
dir
code .
eh
cd config
dir
code .
cd config
dir
code .
dir
code .
eh
cmderr
cmder
ls
cls
clear
alias
cd dotvim\
vim
cd ..
cd config
dir
code .
%VI%
history
history
history
path
history
exit
lp
eh
eh
qal
qal
qal
sett
sett
vim
clear
vi
exit
exit
cd \
vi
clear
cmd
gvim
vi
exit
exit
cd \
vi
cmd
gvim
clear
dir
ll
exit
exit
cd \
vi
clear
cmd
gvim
vi
exit
exit
cd \
vi
cmd
gvim
l
ls
gi
gl
ll
dir
clear
dir
cmd
gvim
l
ls
gi
gl
dir
cmd
cd %ME%
chcp 949
d:
dir
clear
ll
c:
%me%
me
c:
%me%
cd
me
clear
ll
dir
cls
cl
me
dir
gl
dir
cmd
cd %ME%
chcp 949
d:
dir
clear
ll
c:
%me%
me
c:
%me%
cd
me
dir
cls
cl
me
min
yarn
celar
yarn -v
cd be\
yarn global add @vue/cli
vue -v
vue create fe
clear
;;
vue
vue --version
dir
ll
chcp 949
d:
dir
clear
ll
c:
%me%
me
c:
%me%
me
dir
cl
me
yarn
celar
yarn -v
yarn global add @vue/cli
vue -v
vue create fe
;;
vue
vue --version
min
cd b
e
cd be\
cd fe
cd..
cd
cd fe\
vue add vuetify
ll
c
clear
cls
yarn serve
cd ..
dir
exit
c
yarn serve
cd ..
exit
clear
min
dir
e .
e.
cls
ll
e .
e.
cls
dir
clear
ll
ll
min
cd ..
min
clear
ll
ll
exit
cd config
dir
sub .
sub
cd ..
clear
ll
exit
cd config
sub user_aliases.cmd 
min
dir
ll
ls
ls -alh
sub .vimrc
sub .
sub
sub .
sub
gvim
cd
mn
min
ll
vi
clear
path
dir
clear
ll
ll
min
cd ..
min
clear
ll
ll
exit
cd config
dir
sub .
sub
clear
ll
exit
cd config
sub user_aliases.cmd 
min
ll
ls
ls -alh
sub .vimrc
sub .
sub
sub .
sub
mn
min
path
clse
cls
gvim
which vim
cd /
dir vim*.exe /s
dir vi*.exe /s
cd "Program
cd "Program Files
cd git
cd Vim\
cd vim81\
vim
cd ..
cd  git
cd usr
cd bin
dir
dir v*
mv vim.exe vvv.exe
vi
clear
cd
ll
ll
vi
min
cls
cd ..
cd  git
cd usr
cd bin
dir v*
mv vim.exe vvv.exe
vi
cd
ll
vi
cls
min
c:
clear
l
ll
ls
dir
ls -al
exit
l
dir
exit
lll
ls
ls -al
ll
d:
min
c:
ls
dir
ls -al
exit
l
dir
exit
lll
ls -al
c:
d:
cd ..
min
ls
ll
l
exit
lll
ls -al
c:
d:
cd ..
min
ls
clear
cls
dir
pwd
ll
lll
ls -al
c:
d:
cd ..
min
ls
ll
exit
lll
ls -al
c:
cd ..
ls
pwd
c:\
cd \
dir vbe*.dll /s
d:
min
clar
l
vi
clear
dir
cls
ll
dir
cls
min
l
clear
ll
cd \
dir vbe*.dll /s
l
vi
clear
dir
cls
ll
cls
l
cd \
dir vbe*.dll /s
min
cd ..
cd "ProgramData\
cd Anaconda3\
dir
cd\\
cd
ana
clear
ll
conda list
conda info --envs
e.
exit
min
coda
conda info --envs
path
exit
min
coda
path
ana
ll
dir
kk
conda config --envs
conda info --envs
conda env list
conda env update
e.
exit
min
coda
conda info --envs
path
exit
min
coda
path
kk
conda config --envs
conda env update
dir env* /s
dir env*.yml
dir env*.yml /s
cd envs\
code .conda_envs_dir_test 
sub settings.json 
ll
conda env
cd ..
dir en*.yml /s
conda activate test
ana
cd test\
dir
clear
conda info --envs
conda env list
conda env list
min
cd AppData\
dir
dir con* /s
dir conti* /s
dir
clear
conda info --envs
conda env list
conda env list
cd AppData\
dir con* /s
dir conti* /s
ana
min
cd D
cd Doc
cd Documents\
cd Python\
cd mysite\
dir
ll
python manage.py runserver
exit
dir
ll
gvim workbench.desktop.main.css 
cls
min
c:
clear
l
ll
ls
dir
ls -al
exit
l
dir
exit
lll
ls
ls -al
ll
d:
min
c:
ls
dir
ls -al
exit
l
dir
exit
lll
ls -al
c:
d:
cd ..
min
ls
ll
l
exit
lll
ls -al
c:
d:
cd ..
min
ls
clear
cls
dir
pwd
ll
lll
ls -al
c:
d:
cd ..
min
ls
ll
exit
lll
ls -al
c:
cd ..
pwd
c:\
cd \
dir vbe*.dll /s
d:
min
l
vi
clear
dir
cls
ll
dir
cls
min
l
clear
ll
cd \
dir vbe*.dll /s
l
vi
clear
dir
cls
ll
l
cd \
dir vbe*.dll /s
min
cd ..
cd "ProgramData\
cd Anaconda3\
dir
cd\\
cd
ana
clear
ll
conda info --envs
e.
exit
min
coda
conda info --envs
path
exit
min
coda
path
ana
ll
dir
kk
conda config --envs
conda info --envs
conda env list
conda env update
e.
exit
min
coda
conda info --envs
path
exit
min
coda
path
kk
conda config --envs
conda env update
dir env* /s
dir env*.yml
dir env*.yml /s
cd envs\
code .conda_envs_dir_test 
sub settings.json 
conda env
dir en*.yml /s
conda activate test
cd test\
dir
conda env list
cd AppData\
dir con* /s
dir conti* /s
conda info
conda update conda
conda update anaconda
conda clean -p
conda info list
conda info --envs
conda create --name test python=3.7
conda env list
clar
conda remove --name test -all
conda remove --name test --all
rmdir test
del /f/q/s test
cd test
rmdir /f/s test
rmdir /q/s test
conda create --name mysite python=3.7
conda activate mysite
pip install django
conda list
cls
mkdir mysite
django-admin
django-admin startproject mysite
cd mysite
pip freeze
python manage.py startapp pols
del /f/q/s pols\
rmdir /q/s pols\
python manage.py startapp polls
cd polls\
cler
cd migrations\
vi _init__.py
clea
rll
code .
ana
cd lib
cd d
dir d*
cd ..
cd Library\
cd ,,
cd..
dir djan* /s
ls
min
cd Documents\
cd Python\
cd mysite\
python manage.py makemigrations polls
python3
python
dir
python manage.py createsuperuser
python manage.py makemigrations
python manage.py migrate
python manage.py shell
python manage.py runserver
conda deactivate
ll
clear
dir *.ps1 /s
vim
clear
ll
edit
code
min
node
min
ll
cls
now
nodw
node
conda update conda
conda update anaconda
conda clean -p
conda info list
conda info --envs
conda create --name test python=3.7
conda env list
clar
conda remove --name test -all
conda remove --name test --all
rmdir test
del /f/q/s test
cd test
rmdir /f/s test
rmdir /q/s test
conda create --name mysite python=3.7
conda activate mysite
pip install django
conda list
cls
mkdir mysite
django-admin
django-admin startproject mysite
cd mysite
pip freeze
python manage.py startapp pols
del /f/q/s pols\
rmdir /q/s pols\
python manage.py startapp polls
cd polls\
cd migrations\
vi _init__.py
clea
rll
code .
ana
cd lib
cd d
dir d*
cd Library\
cd..
dir djan* /s
min
cd Documents\
cd mysite\
python manage.py makemigrations polls
python3
python
python manage.py createsuperuser
python manage.py makemigrations
python manage.py migrate
python manage.py shell
python manage.py runserver
conda deactivate
ll
clear
dir *.ps1 /s
vim
ll
edit
code
min
node
min
now
nodw
node
d:
l
cd 12_dev\
cd 01_javascript\
cd 01
cd 01_json\
git clone https://github.com/ihanseol/js-playground.git
git
cd js-playground\
git commit 
git config --global user.name "ihanseol"
git config --global user.email "hansel33@naver.com"
git commit -m "addfile js1"
git clone https://github.com/ihanseol/DemoDojang.git
cd DemoDojang\
git status
git add .
git commit
git push
cls
cd
cd Python\
vi hello.py 
vi test.py 
cler
clear
cd ,,
cd ..
dir
ls
ll
ls
min
d:
cd 12_dev\
ll
cd js-playground\
dir
git status
git add .
git commit -m "vimrc"
git push
cd js-playground\
dir
git status
git add .
git commit -m "vimrc"
git push
cmd
git
clear
ll
cd ..
dir
ls
ll
ls
min
d:
cd 12_dev\
ll
cd js-playground\
dir
git status
git add .
git commit -m "vimrc"
git push
cd js-playground\
git commit -m "vimrc"
cmd
git
cd WebstormProjects\
clear
git init
dir
ls -al
git ommit
git remote add origin https://github.com/ihanseol/WebStormProjects.git
git remote -V
git remote -v
gs
git status
git add .
git commit
git puhs
git push
git push origin master
ll
